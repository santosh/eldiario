#!/usr/bin/env python3
#-*- coding: utf-8 -*-

import os
import sys
import argparse
from argparse import RawDescriptionHelpFormatter
from datetime import datetime

# {{{ Argument Parser
parser = argparse.ArgumentParser(
    prog='eldiario',
    description='CLI diary program',
    formatter_class=RawDescriptionHelpFormatter,
    epilog='''alpha version, report errors to github'''
        )

parser.add_argument(
    '-n',
    '--new',
    dest='new',
    action='store_true',
    help='creates new entry at current time'
)

parser.add_argument(
    '-l',
    '--list',
    dest='lists',
    action='store_true',
    help='lists available entries'
)

args = parser.parse_args()

# }}}
# {{{ Definitions
now = datetime.now()
year = now.strftime('%Y')
month = now.strftime('%m')
day = now.strftime('%d')
hour = now.strftime('%H')
minute = now.strftime('%M')
second = now.strftime('%S')
ymd = [year, month, day]
hms = [hour, minute, second]
currentTime = ':'.join(hms)
currentDate = '-'.join(ymd)
file_extension = ".txt"
eldiario_dir = os.path.join(os.path.expanduser("~"), 'eldiario')
# }}}
# {{{ Directory creation handling
# create dir if not exists
if not os.path.exists(eldiario_dir):
    os.mkdir(eldiario_dir)

# create date folder if eldiario_dir exists
if not os.path.exists(os.path.join(eldiario_dir + "/" + year)):
    os.mkdir(os.path.join(eldiario_dir) + "/" + year)

# create date folder if year folder exists
if not os.path.exists(os.path.join(eldiario_dir + "/" + year + "/" + month)):
    os.mkdir(os.path.join(eldiario_dir) + "/" + year + "/" + month)
# }}}

if args.new:
    with open(os.path.join(eldiario_dir, year, month, currentDate + file_extension), 'w') as today:
        today.write("This is ecxt\n")
elif args.lists:
    print("listing")
    os.listdir(eldiario_dir)
